services:
  grafana:
    image: grafana/grafana:latest
    container_name: itzvadi-grafana
    ports:
      - "3000:3000"
    volumes:
      - ./grafana/provisioning:/etc/grafana/provisioning
    depends_on:
      - mimir
      - loki
    environment:
      - GF_AUTH_ANONYMOUS_ENABLED=true
      - GF_AUTH_ANONYMOUS_ORG_ROLE=Admin
      - GF_USERS_DEFAULT_THEME=light
      - GF_LOG_MODE=console
      - GF_LOG_LEVEL=critical
      - GF_SERVER_TITLE=itzvadi Grafana

  mimir:
    image: grafana/mimir:latest
    container_name: itzvadi-mimir
    ports:
      - "9009:9009"
    command: ["-config.file=/etc/mimir.yaml"]
    volumes:
      - ./config/mimir-config.yaml:/etc/mimir.yaml


  loki:
    image: grafana/loki:latest
    container_name: itzvadi-loki
    ports:
      - "3100:3100"
    command: ["-config.file=/etc/loki-local-config.yaml"]
    volumes:
     - ./config/loki-config.yaml:/etc/loki-local-config.yaml
     - ./loki-data:/loki

  alloy:
    image: grafana/alloy:latest
    container_name: itzvadi-alloy
    ports:
      - "12345:12345"
    command: ["run", "/etc/alloy/config.alloy","--server.http.listen-addr=0.0.0.0:12345", "--storage.path=/var/lib/alloy/data"]
    volumes:
      - ./config/config.alloy:/etc/alloy/config.alloy
      - /var/log:/var/log:ro
      - /proc:/host/proc:ro
      - /sys:/host/sys:ro
      - /:/rootfs:ro
      - ./tools/logs:/logs


  node_exporter:
    image: prom/node-exporter:latest
    container_name: itzvadi-node_exporter
    ports:
      - "9100:9100"
    restart: unless-stopped

  log-generator:
    build:
      context: .
      dockerfile: Dockerfile
    volumes:
      - ./tools/logs:/logs
