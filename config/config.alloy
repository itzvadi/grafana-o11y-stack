prometheus.scrape "MACOS" {
  // Collect metrics from the default listen address.
  targets = [{
    __address__ = "node_exporter:9100",
  }]
  scrape_interval = "15s"

  forward_to = [prometheus.remote_write.metrics_service.receiver]
}


prometheus.remote_write "metrics_service" {
  // Send metrics to a Mimir instance
  endpoint {
    url = "http://mimir:9009/api/v1/push"

    headers = {
      "X-Scope-OrgID" = "staging",
    }
  }
}

 local.file_match "local_files" {
     path_targets = [{"__path__" = "/var/log/*.log"}, {"__path__" = "/logs/dummy.log"}]
     sync_period = "5s"
 }


loki.source.file "log_scrape" {
    targets    = local.file_match.local_files.targets
    forward_to = [loki.process.filter_logs.receiver]
    tail_from_end = true
}

 
loki.process "filter_logs" {
    stage.drop {
        source = ""
        expression  = ".*Connection closed by authenticating user root"
        drop_counter_reason = "noisy"
      }
    forward_to = [loki.write.grafana_loki.receiver]
    }

// Remote write destination for logs
loki.write "grafana_loki" {
  endpoint {
    url = "http://loki:3100/loki/api/v1/push"
  }
}



